{
	"info": {
		"_postman_id": "bb223969-2a7d-42d5-b2d7-126f153b9ebc",
		"name": "Challenge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11237957"
	},
	"item": [
		{
			"name": "GetTests",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validando funcionamento da api com status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Validando atributos do body\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"userId\");",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"    pm.expect(pm.response.text()).to.include(\"title\");",
							"    pm.expect(pm.response.text()).to.include(\"body\");",
							"});",
							"",
							"pm.test(\"Validando texto do status code\", () => {",
							"  pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"validando Header\", () => {",
							"  pm.response.to.have.header(\"Content-Type\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://jsonplaceholder.typicode.com/posts",
					"protocol": "http",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "PostTests",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validando funcionamento da api com status 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Validando texto do status code\", () => {",
							"  pm.response.to.have.status(\"Created\");",
							"});",
							"",
							"pm.test(\"validando Header\", () => {",
							"  pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Validando reposta de contrato\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.userId).to.eql(1);",
							"  pm.expect(responseJson.id).to.eql(101);",
							"  pm.expect(responseJson.title).to.eql(\"teste\");",
							"  pm.expect(responseJson.body).to.eql(\"bodytest\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"userId\": 1,\n        \"id\": 101,\n        \"title\": \"teste\",\n        \"body\": \"bodytest\"\n    }\n\n \n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://jsonplaceholder.typicode.com/posts",
					"protocol": "http",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		}
	]
}